<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.EnvironmentDataMapper">
    <resultMap id="BaseResultMap" type="com.community.entity.data.EnvironmentData">
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="device_id" jdbcType="VARCHAR" property="deviceId"/>
        <result column="indoor_temperature" jdbcType="DOUBLE" property="indoorTemperature"/>
        <result column="humidity" jdbcType="DOUBLE" property="humidity"/>
        <result column="smoke_concentration" jdbcType="DOUBLE" property="smokeConcentration"/>
        <result column="light_intensity" jdbcType="DOUBLE" property="lightIntensity"/>
        <result column="upload_date" jdbcType="TIMESTAMP" property="uploadDate"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        `user_id`, `device_id`, `indoor_temperature`, `humidity`, `smoke_concentration`,
        `light_intensity`, `upload_date`
    </sql>
    <select id="selectByExample" parameterType="com.community.entity.example.EnvironmentDataExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from environment_data_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <delete id="deleteByExample" parameterType="com.community.entity.example.EnvironmentDataExample">
        delete from environment_data_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.community.entity.data.EnvironmentData">
        insert into environment_data_detail (`user_id`, `device_id`, `indoor_temperature`,
        `humidity`, `smoke_concentration`, `light_intensity`,
        `upload_date`)
        values (#{userId,jdbcType=VARCHAR}, #{deviceId,jdbcType=VARCHAR}, #{indoorTemperature,jdbcType=DOUBLE},
        #{humidity,jdbcType=DOUBLE}, #{smokeConcentration,jdbcType=DOUBLE}, #{lightIntensity,jdbcType=DOUBLE},
        #{uploadDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.community.entity.data.EnvironmentData">
        insert into environment_data_detail
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                `user_id`,
            </if>
            <if test="deviceId != null">
                `device_id`,
            </if>
            <if test="indoorTemperature != null">
                `indoor_temperature`,
            </if>
            <if test="humidity != null">
                `humidity`,
            </if>
            <if test="smokeConcentration != null">
                `smoke_concentration`,
            </if>
            <if test="lightIntensity != null">
                `light_intensity`,
            </if>
            <if test="uploadDate != null">
                `upload_date`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="deviceId != null">
                #{deviceId,jdbcType=VARCHAR},
            </if>
            <if test="indoorTemperature != null">
                #{indoorTemperature,jdbcType=DOUBLE},
            </if>
            <if test="humidity != null">
                #{humidity,jdbcType=DOUBLE},
            </if>
            <if test="smokeConcentration != null">
                #{smokeConcentration,jdbcType=DOUBLE},
            </if>
            <if test="lightIntensity != null">
                #{lightIntensity,jdbcType=DOUBLE},
            </if>
            <if test="uploadDate != null">
                #{uploadDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.community.entity.example.EnvironmentDataExample"
            resultType="java.lang.Long">
        select count(*) from environment_data_detail
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update environment_data_detail
        <set>
            <if test="record.userId != null">
                `user_id` = #{record.userId,jdbcType=VARCHAR},
            </if>
            <if test="record.deviceId != null">
                `device_id` = #{record.deviceId,jdbcType=VARCHAR},
            </if>
            <if test="record.indoorTemperature != null">
                `indoor_temperature` = #{record.indoorTemperature,jdbcType=DOUBLE},
            </if>
            <if test="record.humidity != null">
                `humidity` = #{record.humidity,jdbcType=DOUBLE},
            </if>
            <if test="record.smokeConcentration != null">
                `smoke_concentration` = #{record.smokeConcentration,jdbcType=DOUBLE},
            </if>
            <if test="record.lightIntensity != null">
                `light_intensity` = #{record.lightIntensity,jdbcType=DOUBLE},
            </if>
            <if test="record.uploadDate != null">
                `upload_date` = #{record.uploadDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update environment_data_detail
        set `user_id` = #{record.userId,jdbcType=VARCHAR},
        `device_id` = #{record.deviceId,jdbcType=VARCHAR},
        `indoor_temperature` = #{record.indoorTemperature,jdbcType=DOUBLE},
        `humidity` = #{record.humidity,jdbcType=DOUBLE},
        `smoke_concentration` = #{record.smokeConcentration,jdbcType=DOUBLE},
        `light_intensity` = #{record.lightIntensity,jdbcType=DOUBLE},
        `upload_date` = #{record.uploadDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>


    <sql id="Page_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <select id="queryWithPage" resultMap="BaseResultMap">
        select
        <if test="example.distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from environment_data_detail
        <if test="_parameter != null">
            <include refid="Page_Where_Clause"/>
        </if>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
        LIMIT ${(page.page - 1) * page.record}, #{page.record}
    </select>
</mapper>